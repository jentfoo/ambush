apply from: "../build.shared"

repositories {
  maven {
    url 'https://swt-repo.googlecode.com/svn/repo/'
  }
}

public String getSWTWindowingLibrary(String platform) {
  switch (platform.replaceAll(' ', '').toLowerCase()) {
    case ~/.*linux.*/: return 'gtk'
    case ~/.*darwin.*/: return 'cocoa'
    case ~/.*osx.*/: return 'cocoa'
    case ~/.*win.*/: return 'win32'
    default: return null
  }
}

public String getSWTPlatform(String platform) {
  switch(platform.replaceAll(' ', '').toLowerCase()) {
    case ~/.*linux.*/: return 'linux'
    case ~/.*darwin.*/: return 'macosx'
    case ~/.*osx.*/: return 'macosx'
    case ~/.*win.*/: return 'win32'
    default: return platform
  }
}

public String getSWTArch(String arch) {
  switch(arch) {
    case ~/.*64.*/: return 'x86_64'
    default: return 'x86'
  }
}

ext {
  swtVersion = '4.3'
   swtWindowingLibrary = getSWTWindowingLibrary(System.properties['os.name'])
   swtArch = getSWTArch(System.properties['os.arch'])
   swtPlatform = getSWTPlatform(System.properties['os.name'])
  swtArtifactName = "org.eclipse.swt.${swtWindowingLibrary}.${swtPlatform}.${swtArch}"
}

dependencies {
  compile (
    "org.threadly:ambush:+",
    "org.eclipse.swt:${swtArtifactName}:${swtVersion}"
  )
}
 
jar {
  from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
}

build.dependsOn("copyLibs");

task copyLibs(type: Copy) {
  into "$buildDir/libs/"
  from configurations.runtime
}
